@model ItemClientViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Items</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "Items", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Desc
            </th>
            <th>
                Quantity
            </th>
            <th>
                Buy Cost
            </th>
            <th>
                Sell Cost
            </th>
            <th>
                Supplier
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@for (int i = 0; i < Model.Items.Count; i++) {
        <tr>
            <td>
                @Html.DisplayFor(m => m.Items[i].Name)
                @Html.HiddenFor(m => m.Items[i].Name)
            </td>
            <td>
                        @Html.DisplayFor(m => m.Items[i].ItemDesc)
                        @Html.HiddenFor(m => m.Items[i].ItemDesc)
            </td>
            <td>
                        @Html.DisplayFor(m => m.Items[i].Quantity)
                        @Html.HiddenFor(m => m.Items[i].Quantity)
            </td>
            <td>
                        @(Model.Items[i].BuyCost.ToString("C2"))
                        @Html.HiddenFor(m => m.Items[i].BuyCost)
            </td>
            <td>
                        @(Model.Items[i].SellCost.ToString("C2"))
                        @Html.HiddenFor(m => m.Items[i].SellCost)
            </td>
            <td>
                        @(Model.Suppliers[i].Name)
                        @Html.HiddenFor(m => m.Items[i].SupplierId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@Model.Items[i].Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@Model.Items[i].Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@Model.Items[i].Id">Delete</a>
            </td>
                <td>
                        @Html.CheckBoxFor(m => m.Items[i].IsChecked)
                        @Html.HiddenFor(m => m.Items[i].Id)
                </td>
                <td>
                        @{
                            int minQuantity = Model.Items[i].Quantity == 0 ? 0 : 1;
                        }
                        @Html.TextBox($"Items[{i}].QuantityWanted", minQuantity, new { type = "number", min = minQuantity, max = int.MaxValue })
                        @Html.HiddenFor(m => m.Items[i].QuantityWanted)
                </td>
        </tr>
}
    </tbody>
</table>
<br />
    <div style="text-align: center;">
        <p>Create Invoice</p>
        @Html.DropDownListFor(m => m.SelectedClientId, new SelectList(Model.Clients, "Id", "Name"))
        @Html.HiddenFor(model => model.SelectedClientId, new { id = "hiddenDropdownValue" })
        <button class="btn btn-primary" name="submitButton" value="invoiceSubmit">Create invoice</button>
    </div>
    <div style="text-align: center; margin: 10px;">   
        <button type="submit" class="btn btn-danger" name="submitButton" value="orderFromSupplier">Order from supplier</button>
    </div>

}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@ViewBag.Message");
        };
    </script>
}
<div class="form-group">

</div>
